
services:
  ###########################
  web:
    container_name: job-web
    restart: always
    build:
      context: ./company_review
      dockerfile: Dockerfile/Dockerfile.prod
    command: gunicorn -c ./config/gunicorn.py
    ports:
      - 8043:8000
    env_file:
      - ./.env/.env.prod
    volumes:
      - ./company_review:/usr/src/company_review
      - ./company_review/static:/usr/src/company_review/staticfiles
      - ./media:/usr/src/company_review/media
    networks:
      - job
  ###########################
  redis:
    container_name: job-redis
    restart: always
    image: redis:6.2.6-alpine
    ports:
      - 6379
    volumes:
      - redis_data:/etc/redis_data/data
      # - redis_data:/data
    depends_on:
      - web
    networks:
      - job
  db:
    container_name: job-db
    restart: always
    image: postgres:12.7-alpine
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=company_review
      - POSTGRES_PASSWORD=company_review
      - POSTGRES_DB=company_review
    volumes:
      - ./pgdata:/etc/postgresql/data
      # - ./pgdata:/var/lib/postgresql/data
    networks:
      - job
  worker:
    restart: always
    container_name: job-worker
    build:
      context: ./company_review
      dockerfile: Dockerfile/Dockerfile.prod
    command: celery -A celeries.celery worker -B -l INFO -Q search,saramin,kreditjob,jobplanet --concurrency=6 --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - ./company_review:/usr/src/company_review
    env_file:
      - ./.env/.env.prod
    depends_on:
      - web
    networks:
      - job
networks:
  job:
    driver: bridge
  ###########################
  # nginx-proxy:
  #   container_name: nginx-proxy
  #   restart: always
  #   build:
  #     context: nginx
  #   ports:
  #     - 8080:80
  #     - 8043:443
  #   volumes:
  #     - certs:/etc/nginx/certs
  #     - vhost:/etc/nginx/vhost.d
  #     - html:/usr/share/nginx/html
  #     - /var/run/docker.sock:/tmp/docker.sock:ro
  #     - static:/usr/src/company_review/static
  #     - media:/usr/src/company_review/media
  #   depends_on:
  #     - web
  ###########################
  # nginx-proxy-acme:
  #   container_name: nginx-proxy-acme
  #   image: nginxproxy/acme-companion
  #   volumes:
  #     - certs:/etc/nginx/certs
  #     - vhost:/etc/nginx/vhost.d
  #     - html:/usr/share/nginx/html
  #     - /var/run/docker.sock:/var/run/docker.sock:ro
  #     - acme:/etc/acme.sh
  #   env_file:
  #     - ./.env/.env.prod.nginx_acme
  #   depends_on:
  #     - nginx-proxy
  ###########################
volumes:
  redis_data:
  pgata:
  static:
  media:

